2023-02-09 14:06:50,954 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.16 (default, Jan 17 2023, 23:13:24) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 3090
CUDA_HOME: /data/apps/cuda/11.1
NVCC: Cuda compilation tools, release 11.1, V11.1.74
GCC: gcc (GCC) 7.3.0
PyTorch: 1.10.0+cu111
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.11.0+cu111
OpenCV: 4.7.0
MMCV: 1.7.0
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 11.1
MMDetection: 2.28.1+c14dd6c
------------------------------------------------------------

2023-02-09 14:06:51,633 - mmdet - INFO - Distributed training: False
2023-02-09 14:06:52,300 - mmdet - INFO - Config:
model = dict(
    type='MaskRCNN',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch',
        init_cfg=dict(
            type='Pretrained',
            checkpoint=
            '/HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth'
        )),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=1,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
        mask_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=14, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        mask_head=dict(
            type='FCNMaskHead',
            num_convs=4,
            in_channels=256,
            conv_out_channels=256,
            num_classes=1,
            loss_mask=dict(
                type='CrossEntropyLoss', use_mask=True, loss_weight=1.0))),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=True),
            mask_size=28,
            pos_weight=-1,
            debug=False)),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100,
            mask_thr_binary=0.5)))
dataset_type = 'CocoDataset'
data_root = '/HOME/scz0bcb/run/balloon_dataset/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1333, 800),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=2,
    workers_per_gpu=2,
    train=dict(
        type='CocoDataset',
        ann_file=
        '/HOME/scz0bcb/run/balloon_dataset/train_annotation/transfer_train.json',
        img_prefix='/HOME/scz0bcb/run/balloon_dataset/train',
        classes=('balloon', ),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True, with_mask=True),
            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(
                type='Collect',
                keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file=
        '/HOME/scz0bcb/run/balloon_dataset/val_annotation/transfer_val.json',
        img_prefix='/HOME/scz0bcb/run/balloon_dataset/val',
        classes=('balloon', ),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file=
        '/HOME/scz0bcb/run/balloon_dataset/val_annotation/transfer_val.json',
        img_prefix='/HOME/scz0bcb/run/balloon_dataset/val',
        classes=('balloon', ),
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(metric=['bbox', 'segm'])
optimizer = dict(type='SGD', lr=0.0025, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[16, 22])
runner = dict(type='EpochBasedRunner', max_epochs=10)
checkpoint_config = dict(interval=5)
log_config = dict(interval=10, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = '/HOME/scz0bcb/run/mmdetection/configs/checkpoints/mask_rcnn_r50_fpn_mstrain-poly_3x_coco_20210524_201154-21b550bb.pth'
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
auto_scale_lr = dict(enable=False, base_batch_size=16)
work_dir = './work_dirs/balloon_result'
auto_resume = False
gpu_ids = [0]

2023-02-09 14:06:52,302 - mmdet - INFO - Set random seed to 1801784985, deterministic: False
2023-02-09 14:06:52,611 - mmdet - INFO - initialize ResNet with init_cfg {'type': 'Pretrained', 'checkpoint': '/HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth'}
2023-02-09 14:06:52,955 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2023-02-09 14:06:52,972 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2023-02-09 14:06:52,976 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from /HOME/scz0bcb/run/mmdetection/configs/ballon/resnet50-0676ba61.pth 

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([3, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([12, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.weight - torch.Size([2, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.bias - torch.Size([2]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_reg.weight - torch.Size([4, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.fc_reg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.mask_head.convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

roi_head.mask_head.convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

roi_head.mask_head.convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

roi_head.mask_head.convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

roi_head.mask_head.convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

roi_head.mask_head.convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

roi_head.mask_head.convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

roi_head.mask_head.convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of MaskRCNN  

roi_head.mask_head.upsample.weight - torch.Size([256, 256, 2, 2]): 
Initialized by user-defined `init_weights` in FCNMaskHead  

roi_head.mask_head.upsample.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in FCNMaskHead  

roi_head.mask_head.conv_logits.weight - torch.Size([1, 256, 1, 1]): 
Initialized by user-defined `init_weights` in FCNMaskHead  

roi_head.mask_head.conv_logits.bias - torch.Size([1]): 
Initialized by user-defined `init_weights` in FCNMaskHead  
2023-02-09 14:06:58,287 - mmdet - INFO - Automatic scaling of learning rate (LR) has been disabled.
2023-02-09 14:06:58,381 - mmdet - INFO - load checkpoint from local path: /HOME/scz0bcb/run/mmdetection/configs/checkpoints/mask_rcnn_r50_fpn_mstrain-poly_3x_coco_20210524_201154-21b550bb.pth
2023-02-09 14:07:02,181 - mmdet - WARNING - The model and loaded state dict do not match exactly

size mismatch for roi_head.bbox_head.fc_cls.weight: copying a param with shape torch.Size([81, 1024]) from checkpoint, the shape in current model is torch.Size([2, 1024]).
size mismatch for roi_head.bbox_head.fc_cls.bias: copying a param with shape torch.Size([81]) from checkpoint, the shape in current model is torch.Size([2]).
size mismatch for roi_head.bbox_head.fc_reg.weight: copying a param with shape torch.Size([320, 1024]) from checkpoint, the shape in current model is torch.Size([4, 1024]).
size mismatch for roi_head.bbox_head.fc_reg.bias: copying a param with shape torch.Size([320]) from checkpoint, the shape in current model is torch.Size([4]).
size mismatch for roi_head.mask_head.conv_logits.weight: copying a param with shape torch.Size([80, 256, 1, 1]) from checkpoint, the shape in current model is torch.Size([1, 256, 1, 1]).
size mismatch for roi_head.mask_head.conv_logits.bias: copying a param with shape torch.Size([80]) from checkpoint, the shape in current model is torch.Size([1]).
2023-02-09 14:07:02,183 - mmdet - INFO - Start running, host: scz0bcb@g0110, work_dir: /data/run01/scz0bcb/mmdetection/work_dirs/balloon_result
2023-02-09 14:07:02,183 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-02-09 14:07:02,183 - mmdet - INFO - workflow: [('train', 1)], max: 10 epochs
2023-02-09 14:07:02,183 - mmdet - INFO - Checkpoints will be saved to /data/run01/scz0bcb/mmdetection/work_dirs/balloon_result by HardDiskBackend.
2023-02-09 14:07:10,485 - mmdet - INFO - Epoch [1][10/31]	lr: 4.746e-05, eta: 0:04:08, time: 0.827, data_time: 0.321, memory: 3764, loss_rpn_cls: 0.0709, loss_rpn_bbox: 0.0169, loss_cls: 0.7194, acc: 43.1445, loss_bbox: 0.3115, loss_mask: 13.7867, loss: 14.9055
2023-02-09 14:07:12,294 - mmdet - INFO - Epoch [1][20/31]	lr: 9.741e-05, eta: 0:02:26, time: 0.181, data_time: 0.013, memory: 3764, loss_rpn_cls: 0.0446, loss_rpn_bbox: 0.0179, loss_cls: 0.5493, acc: 85.2637, loss_bbox: 0.2700, loss_mask: 4.4735, loss: 5.3554
2023-02-09 14:07:14,071 - mmdet - INFO - Epoch [1][30/31]	lr: 1.474e-04, eta: 0:01:50, time: 0.178, data_time: 0.011, memory: 3764, loss_rpn_cls: 0.0519, loss_rpn_bbox: 0.0147, loss_cls: 0.3692, acc: 92.6855, loss_bbox: 0.2711, loss_mask: 0.6056, loss: 1.3126
2023-02-09 14:07:22,101 - mmdet - INFO - Evaluating bbox...
2023-02-09 14:07:22,250 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.028
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.056
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.025
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.027
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.036
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.470
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.470
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.470
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.425
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.511

2023-02-09 14:07:22,250 - mmdet - INFO - Evaluating segm...
2023-02-09 14:07:22,433 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.007
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.029
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.010
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.039
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.128
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.128
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.128
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.192
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.114

2023-02-09 14:07:22,435 - mmdet - INFO - Exp name: mask_rcnn_balloon.py
2023-02-09 14:07:22,435 - mmdet - INFO - Epoch(val) [1][13]	bbox_mAP: 0.0280, bbox_mAP_50: 0.0559, bbox_mAP_75: 0.0252, bbox_mAP_s: 0.0000, bbox_mAP_m: 0.0270, bbox_mAP_l: 0.0356, bbox_mAP_copypaste: 0.0280 0.0559 0.0252 0.0000 0.0270 0.0356, segm_mAP: 0.0068, segm_mAP_50: 0.0287, segm_mAP_75: 0.0000, segm_mAP_s: 0.0000, segm_mAP_m: 0.0098, segm_mAP_l: 0.0393, segm_mAP_copypaste: 0.0068 0.0287 0.0000 0.0000 0.0098 0.0393
2023-02-09 14:07:26,683 - mmdet - INFO - Epoch [2][10/31]	lr: 2.023e-04, eta: 0:01:45, time: 0.421, data_time: 0.242, memory: 3764, loss_rpn_cls: 0.0809, loss_rpn_bbox: 0.0294, loss_cls: 0.2802, acc: 91.6016, loss_bbox: 0.3008, loss_mask: 0.4027, loss: 1.0939
2023-02-09 14:07:28,656 - mmdet - INFO - Epoch [2][20/31]	lr: 2.522e-04, eta: 0:01:31, time: 0.198, data_time: 0.016, memory: 3766, loss_rpn_cls: 0.0294, loss_rpn_bbox: 0.0237, loss_cls: 0.3162, acc: 87.5781, loss_bbox: 0.4716, loss_mask: 0.3194, loss: 1.1603
2023-02-09 14:07:30,418 - mmdet - INFO - Epoch [2][30/31]	lr: 3.022e-04, eta: 0:01:20, time: 0.176, data_time: 0.010, memory: 3766, loss_rpn_cls: 0.0318, loss_rpn_bbox: 0.0076, loss_cls: 0.1991, acc: 92.5195, loss_bbox: 0.2831, loss_mask: 0.1659, loss: 0.6876
2023-02-09 14:07:37,979 - mmdet - INFO - Evaluating bbox...
2023-02-09 14:07:38,083 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.334
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.479
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.407
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.181
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.418
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.660
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.660
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.660
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.625
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.708

2023-02-09 14:07:38,083 - mmdet - INFO - Evaluating segm...
2023-02-09 14:07:38,239 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.387
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.472
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.456
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.128
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.619
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.740
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.740
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.740
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.775
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.769

2023-02-09 14:07:38,240 - mmdet - INFO - Exp name: mask_rcnn_balloon.py
2023-02-09 14:07:38,240 - mmdet - INFO - Epoch(val) [2][13]	bbox_mAP: 0.3337, bbox_mAP_50: 0.4787, bbox_mAP_75: 0.4072, bbox_mAP_s: 0.0000, bbox_mAP_m: 0.1815, bbox_mAP_l: 0.4178, bbox_mAP_copypaste: 0.3337 0.4787 0.4072 0.0000 0.1815 0.4178, segm_mAP: 0.3872, segm_mAP_50: 0.4719, segm_mAP_75: 0.4555, segm_mAP_s: 0.0000, segm_mAP_m: 0.1279, segm_mAP_l: 0.6187, segm_mAP_copypaste: 0.3872 0.4719 0.4555 0.0000 0.1279 0.6187
2023-02-09 14:07:42,587 - mmdet - INFO - Epoch [3][10/31]	lr: 3.571e-04, eta: 0:01:19, time: 0.432, data_time: 0.245, memory: 3890, loss_rpn_cls: 0.0237, loss_rpn_bbox: 0.0111, loss_cls: 0.2244, acc: 89.6484, loss_bbox: 0.3907, loss_mask: 0.1394, loss: 0.7893
2023-02-09 14:07:44,549 - mmdet - INFO - Epoch [3][20/31]	lr: 4.071e-04, eta: 0:01:12, time: 0.196, data_time: 0.015, memory: 3890, loss_rpn_cls: 0.0244, loss_rpn_bbox: 0.0167, loss_cls: 0.2224, acc: 89.2480, loss_bbox: 0.3956, loss_mask: 0.1699, loss: 0.8290
2023-02-09 14:07:46,347 - mmdet - INFO - Epoch [3][30/31]	lr: 4.570e-04, eta: 0:01:06, time: 0.180, data_time: 0.013, memory: 3890, loss_rpn_cls: 0.0184, loss_rpn_bbox: 0.0185, loss_cls: 0.2119, acc: 88.3008, loss_bbox: 0.4186, loss_mask: 0.1654, loss: 0.8329
2023-02-09 14:07:52,483 - mmdet - INFO - Evaluating bbox...
2023-02-09 14:07:52,568 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.576
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.756
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.687
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.473
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.667
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.700
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.700
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.700
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.658
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.753

2023-02-09 14:07:52,568 - mmdet - INFO - Evaluating segm...
2023-02-09 14:07:52,687 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.669
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.751
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.728
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.005
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.424
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.766
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.806
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.806
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.806
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.250
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.833
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.828

2023-02-09 14:07:52,688 - mmdet - INFO - Exp name: mask_rcnn_balloon.py
2023-02-09 14:07:52,688 - mmdet - INFO - Epoch(val) [3][13]	bbox_mAP: 0.5763, bbox_mAP_50: 0.7563, bbox_mAP_75: 0.6868, bbox_mAP_s: 0.0000, bbox_mAP_m: 0.4726, bbox_mAP_l: 0.6673, bbox_mAP_copypaste: 0.5763 0.7563 0.6868 0.0000 0.4726 0.6673, segm_mAP: 0.6693, segm_mAP_50: 0.7507, segm_mAP_75: 0.7285, segm_mAP_s: 0.0052, segm_mAP_m: 0.4236, segm_mAP_l: 0.7660, segm_mAP_copypaste: 0.6693 0.7507 0.7285 0.0052 0.4236 0.7660
2023-02-09 14:07:56,909 - mmdet - INFO - Epoch [4][10/31]	lr: 5.120e-04, eta: 0:01:04, time: 0.419, data_time: 0.237, memory: 3890, loss_rpn_cls: 0.0115, loss_rpn_bbox: 0.0145, loss_cls: 0.1967, acc: 88.6035, loss_bbox: 0.4406, loss_mask: 0.1284, loss: 0.7917
2023-02-09 14:07:58,724 - mmdet - INFO - Epoch [4][20/31]	lr: 5.619e-04, eta: 0:00:59, time: 0.182, data_time: 0.013, memory: 3931, loss_rpn_cls: 0.0136, loss_rpn_bbox: 0.0132, loss_cls: 0.1403, acc: 94.1504, loss_bbox: 0.3282, loss_mask: 0.1077, loss: 0.6030
2023-02-09 14:08:00,618 - mmdet - INFO - Epoch [4][30/31]	lr: 6.119e-04, eta: 0:00:54, time: 0.189, data_time: 0.012, memory: 3931, loss_rpn_cls: 0.0153, loss_rpn_bbox: 0.0100, loss_cls: 0.1442, acc: 95.6641, loss_bbox: 0.3659, loss_mask: 0.1470, loss: 0.6825
2023-02-09 14:08:05,897 - mmdet - INFO - Evaluating bbox...
2023-02-09 14:08:05,969 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.612
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.836
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.769
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.008
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.530
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.667
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.700
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.700
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.700
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.050
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.658
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.750

2023-02-09 14:08:05,969 - mmdet - INFO - Evaluating segm...
2023-02-09 14:08:06,065 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.747
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.830
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.828
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.012
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.713
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.795
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.822
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.822
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.822
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.250
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.842
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.847

2023-02-09 14:08:06,065 - mmdet - INFO - Exp name: mask_rcnn_balloon.py
2023-02-09 14:08:06,066 - mmdet - INFO - Epoch(val) [4][13]	bbox_mAP: 0.6116, bbox_mAP_50: 0.8358, bbox_mAP_75: 0.7691, bbox_mAP_s: 0.0084, bbox_mAP_m: 0.5299, bbox_mAP_l: 0.6673, bbox_mAP_copypaste: 0.6116 0.8358 0.7691 0.0084 0.5299 0.6673, segm_mAP: 0.7472, segm_mAP_50: 0.8301, segm_mAP_75: 0.8276, segm_mAP_s: 0.0120, segm_mAP_m: 0.7134, segm_mAP_l: 0.7946, segm_mAP_copypaste: 0.7472 0.8301 0.8276 0.0120 0.7134 0.7946
2023-02-09 14:08:10,320 - mmdet - INFO - Epoch [5][10/31]	lr: 6.668e-04, eta: 0:00:52, time: 0.422, data_time: 0.238, memory: 3931, loss_rpn_cls: 0.0120, loss_rpn_bbox: 0.0155, loss_cls: 0.1365, acc: 96.2695, loss_bbox: 0.3676, loss_mask: 0.1506, loss: 0.6822
2023-02-09 14:08:12,209 - mmdet - INFO - Epoch [5][20/31]	lr: 7.168e-04, eta: 0:00:48, time: 0.189, data_time: 0.011, memory: 3931, loss_rpn_cls: 0.0085, loss_rpn_bbox: 0.0088, loss_cls: 0.0895, acc: 97.2656, loss_bbox: 0.2215, loss_mask: 0.0901, loss: 0.4184
2023-02-09 14:08:14,107 - mmdet - INFO - Epoch [5][30/31]	lr: 7.667e-04, eta: 0:00:44, time: 0.190, data_time: 0.012, memory: 3931, loss_rpn_cls: 0.0117, loss_rpn_bbox: 0.0113, loss_cls: 0.0795, acc: 97.3145, loss_bbox: 0.1702, loss_mask: 0.0848, loss: 0.3575
2023-02-09 14:08:14,283 - mmdet - INFO - Saving checkpoint at 5 epochs
2023-02-09 14:08:16,889 - mmdet - INFO - Evaluating bbox...
2023-02-09 14:08:16,917 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.719
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.870
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.838
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.076
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.665
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.768
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.788
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.788
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.788
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.150
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.792
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.822

2023-02-09 14:08:16,917 - mmdet - INFO - Evaluating segm...
2023-02-09 14:08:16,952 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.780
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.870
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.866
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.029
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.707
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.834
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.840
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.840
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.840
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.200
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.833
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.878

2023-02-09 14:08:16,952 - mmdet - INFO - Exp name: mask_rcnn_balloon.py
2023-02-09 14:08:16,952 - mmdet - INFO - Epoch(val) [5][13]	bbox_mAP: 0.7192, bbox_mAP_50: 0.8698, bbox_mAP_75: 0.8385, bbox_mAP_s: 0.0757, bbox_mAP_m: 0.6645, bbox_mAP_l: 0.7683, bbox_mAP_copypaste: 0.7192 0.8698 0.8385 0.0757 0.6645 0.7683, segm_mAP: 0.7803, segm_mAP_50: 0.8698, segm_mAP_75: 0.8661, segm_mAP_s: 0.0289, segm_mAP_m: 0.7069, segm_mAP_l: 0.8337, segm_mAP_copypaste: 0.7803 0.8698 0.8661 0.0289 0.7069 0.8337
2023-02-09 14:08:21,197 - mmdet - INFO - Epoch [6][10/31]	lr: 8.217e-04, eta: 0:00:42, time: 0.421, data_time: 0.240, memory: 3931, loss_rpn_cls: 0.0115, loss_rpn_bbox: 0.0103, loss_cls: 0.0681, acc: 97.5195, loss_bbox: 0.1176, loss_mask: 0.0913, loss: 0.2987
2023-02-09 14:08:23,096 - mmdet - INFO - Epoch [6][20/31]	lr: 8.716e-04, eta: 0:00:38, time: 0.190, data_time: 0.013, memory: 3931, loss_rpn_cls: 0.0074, loss_rpn_bbox: 0.0094, loss_cls: 0.0780, acc: 97.2656, loss_bbox: 0.1387, loss_mask: 0.1299, loss: 0.3634
2023-02-09 14:08:24,999 - mmdet - INFO - Epoch [6][30/31]	lr: 9.216e-04, eta: 0:00:35, time: 0.190, data_time: 0.014, memory: 3931, loss_rpn_cls: 0.0074, loss_rpn_bbox: 0.0128, loss_cls: 0.0793, acc: 97.2461, loss_bbox: 0.1022, loss_mask: 0.0863, loss: 0.2880
2023-02-09 14:08:27,562 - mmdet - INFO - Evaluating bbox...
2023-02-09 14:08:27,592 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.750
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.902
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.842
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.050
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.673
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.806
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.200
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.767
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.844

2023-02-09 14:08:27,592 - mmdet - INFO - Evaluating segm...
2023-02-09 14:08:27,629 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.804
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.888
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.886
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.012
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.737
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.855
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.846
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.846
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.846
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.200
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.833
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.886

2023-02-09 14:08:27,629 - mmdet - INFO - Exp name: mask_rcnn_balloon.py
2023-02-09 14:08:27,629 - mmdet - INFO - Epoch(val) [6][13]	bbox_mAP: 0.7498, bbox_mAP_50: 0.9018, bbox_mAP_75: 0.8420, bbox_mAP_s: 0.0505, bbox_mAP_m: 0.6734, bbox_mAP_l: 0.8064, bbox_mAP_copypaste: 0.7498 0.9018 0.8420 0.0505 0.6734 0.8064, segm_mAP: 0.8038, segm_mAP_50: 0.8882, segm_mAP_75: 0.8857, segm_mAP_s: 0.0119, segm_mAP_m: 0.7368, segm_mAP_l: 0.8550, segm_mAP_copypaste: 0.8038 0.8882 0.8857 0.0119 0.7368 0.8550
2023-02-09 14:08:31,821 - mmdet - INFO - Epoch [7][10/31]	lr: 9.765e-04, eta: 0:00:32, time: 0.416, data_time: 0.232, memory: 3931, loss_rpn_cls: 0.0043, loss_rpn_bbox: 0.0080, loss_cls: 0.0516, acc: 98.2227, loss_bbox: 0.0688, loss_mask: 0.0627, loss: 0.1955
2023-02-09 14:08:33,727 - mmdet - INFO - Epoch [7][20/31]	lr: 1.026e-03, eta: 0:00:29, time: 0.191, data_time: 0.013, memory: 3931, loss_rpn_cls: 0.0084, loss_rpn_bbox: 0.0088, loss_cls: 0.0644, acc: 97.8027, loss_bbox: 0.1051, loss_mask: 0.1053, loss: 0.2920
2023-02-09 14:08:35,607 - mmdet - INFO - Epoch [7][30/31]	lr: 1.076e-03, eta: 0:00:26, time: 0.188, data_time: 0.012, memory: 3931, loss_rpn_cls: 0.0073, loss_rpn_bbox: 0.0123, loss_cls: 0.0803, acc: 96.9727, loss_bbox: 0.1098, loss_mask: 0.1063, loss: 0.3160
2023-02-09 14:08:37,646 - mmdet - INFO - Evaluating bbox...
2023-02-09 14:08:37,671 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.748
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.911
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.860
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.126
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.672
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.805
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.796
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.796
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.796
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.250
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.767
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.836

2023-02-09 14:08:37,671 - mmdet - INFO - Evaluating segm...
2023-02-09 14:08:37,700 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.802
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.911
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.884
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.025
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.716
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.859
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.844
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.844
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.844
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.200
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.825
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.886

2023-02-09 14:08:37,700 - mmdet - INFO - Exp name: mask_rcnn_balloon.py
2023-02-09 14:08:37,700 - mmdet - INFO - Epoch(val) [7][13]	bbox_mAP: 0.7482, bbox_mAP_50: 0.9114, bbox_mAP_75: 0.8596, bbox_mAP_s: 0.1262, bbox_mAP_m: 0.6717, bbox_mAP_l: 0.8051, bbox_mAP_copypaste: 0.7482 0.9114 0.8596 0.1262 0.6717 0.8051, segm_mAP: 0.8018, segm_mAP_50: 0.9114, segm_mAP_75: 0.8837, segm_mAP_s: 0.0252, segm_mAP_m: 0.7165, segm_mAP_l: 0.8587, segm_mAP_copypaste: 0.8018 0.9114 0.8837 0.0252 0.7165 0.8587
2023-02-09 14:08:41,938 - mmdet - INFO - Epoch [8][10/31]	lr: 1.131e-03, eta: 0:00:23, time: 0.420, data_time: 0.240, memory: 3931, loss_rpn_cls: 0.0070, loss_rpn_bbox: 0.0078, loss_cls: 0.0545, acc: 98.0078, loss_bbox: 0.0808, loss_mask: 0.0694, loss: 0.2195
2023-02-09 14:08:43,899 - mmdet - INFO - Epoch [8][20/31]	lr: 1.181e-03, eta: 0:00:20, time: 0.196, data_time: 0.014, memory: 3931, loss_rpn_cls: 0.0054, loss_rpn_bbox: 0.0119, loss_cls: 0.0639, acc: 97.5391, loss_bbox: 0.0916, loss_mask: 0.0953, loss: 0.2681
2023-02-09 14:08:45,764 - mmdet - INFO - Epoch [8][30/31]	lr: 1.231e-03, eta: 0:00:17, time: 0.186, data_time: 0.011, memory: 3931, loss_rpn_cls: 0.0022, loss_rpn_bbox: 0.0095, loss_cls: 0.0556, acc: 98.0273, loss_bbox: 0.0852, loss_mask: 0.0744, loss: 0.2269
2023-02-09 14:08:47,688 - mmdet - INFO - Evaluating bbox...
2023-02-09 14:08:47,712 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.744
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.900
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.877
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.713
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.795
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.798
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.798
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.798
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.842

2023-02-09 14:08:47,712 - mmdet - INFO - Evaluating segm...
2023-02-09 14:08:47,741 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.803
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.900
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.880
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.718
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.858
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.842
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.842
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.842
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.833
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.892

2023-02-09 14:08:47,741 - mmdet - INFO - Exp name: mask_rcnn_balloon.py
2023-02-09 14:08:47,741 - mmdet - INFO - Epoch(val) [8][13]	bbox_mAP: 0.7444, bbox_mAP_50: 0.8997, bbox_mAP_75: 0.8769, bbox_mAP_s: 0.0000, bbox_mAP_m: 0.7128, bbox_mAP_l: 0.7952, bbox_mAP_copypaste: 0.7444 0.8997 0.8769 0.0000 0.7128 0.7952, segm_mAP: 0.8027, segm_mAP_50: 0.8997, segm_mAP_75: 0.8805, segm_mAP_s: 0.0000, segm_mAP_m: 0.7183, segm_mAP_l: 0.8585, segm_mAP_copypaste: 0.8027 0.8997 0.8805 0.0000 0.7183 0.8585
2023-02-09 14:08:52,285 - mmdet - INFO - Epoch [9][10/31]	lr: 1.286e-03, eta: 0:00:14, time: 0.451, data_time: 0.253, memory: 3931, loss_rpn_cls: 0.0039, loss_rpn_bbox: 0.0135, loss_cls: 0.0809, acc: 96.7480, loss_bbox: 0.1092, loss_mask: 0.0896, loss: 0.2970
2023-02-09 14:08:54,204 - mmdet - INFO - Epoch [9][20/31]	lr: 1.336e-03, eta: 0:00:11, time: 0.192, data_time: 0.013, memory: 3931, loss_rpn_cls: 0.0047, loss_rpn_bbox: 0.0089, loss_cls: 0.0509, acc: 98.0566, loss_bbox: 0.0734, loss_mask: 0.0755, loss: 0.2134
2023-02-09 14:08:56,004 - mmdet - INFO - Epoch [9][30/31]	lr: 1.386e-03, eta: 0:00:08, time: 0.180, data_time: 0.011, memory: 3931, loss_rpn_cls: 0.0047, loss_rpn_bbox: 0.0073, loss_cls: 0.0457, acc: 98.2617, loss_bbox: 0.0657, loss_mask: 0.0764, loss: 0.1998
2023-02-09 14:08:57,939 - mmdet - INFO - Evaluating bbox...
2023-02-09 14:08:57,962 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.771
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.900
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.879
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.676
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.836
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.820
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.820
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.820
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.872

2023-02-09 14:08:57,963 - mmdet - INFO - Evaluating segm...
2023-02-09 14:08:57,991 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.804
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.900
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.881
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.688
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.865
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.842
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.842
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.842
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.833
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.892

2023-02-09 14:08:57,991 - mmdet - INFO - Exp name: mask_rcnn_balloon.py
2023-02-09 14:08:57,991 - mmdet - INFO - Epoch(val) [9][13]	bbox_mAP: 0.7708, bbox_mAP_50: 0.8999, bbox_mAP_75: 0.8786, bbox_mAP_s: 0.0000, bbox_mAP_m: 0.6758, bbox_mAP_l: 0.8361, bbox_mAP_copypaste: 0.7708 0.8999 0.8786 0.0000 0.6758 0.8361, segm_mAP: 0.8042, segm_mAP_50: 0.8999, segm_mAP_75: 0.8813, segm_mAP_s: 0.0000, segm_mAP_m: 0.6877, segm_mAP_l: 0.8647, segm_mAP_copypaste: 0.8042 0.8999 0.8813 0.0000 0.6877 0.8647
2023-02-09 14:09:02,444 - mmdet - INFO - Epoch [10][10/31]	lr: 1.441e-03, eta: 0:00:05, time: 0.442, data_time: 0.252, memory: 3931, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0127, loss_cls: 0.0640, acc: 97.5586, loss_bbox: 0.0939, loss_mask: 0.0714, loss: 0.2449
2023-02-09 14:09:04,288 - mmdet - INFO - Epoch [10][20/31]	lr: 1.491e-03, eta: 0:00:03, time: 0.184, data_time: 0.011, memory: 3931, loss_rpn_cls: 0.0028, loss_rpn_bbox: 0.0060, loss_cls: 0.0402, acc: 98.5742, loss_bbox: 0.0666, loss_mask: 0.0669, loss: 0.1826
2023-02-09 14:09:06,117 - mmdet - INFO - Epoch [10][30/31]	lr: 1.541e-03, eta: 0:00:00, time: 0.183, data_time: 0.012, memory: 3931, loss_rpn_cls: 0.0036, loss_rpn_bbox: 0.0099, loss_cls: 0.0571, acc: 97.8906, loss_bbox: 0.0775, loss_mask: 0.0945, loss: 0.2426
2023-02-09 14:09:06,315 - mmdet - INFO - Saving checkpoint at 10 epochs
2023-02-09 14:09:08,321 - mmdet - INFO - Evaluating bbox...
2023-02-09 14:09:08,342 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.750
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.895
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.853
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.660
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.817
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.784
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.784
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.784
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.700
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.856

2023-02-09 14:09:08,342 - mmdet - INFO - Evaluating segm...
2023-02-09 14:09:08,366 - mmdet - INFO - 
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.783
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.895
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.870
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.671
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.851
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.816
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.816
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.816
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.750
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.883

2023-02-09 14:09:08,366 - mmdet - INFO - Exp name: mask_rcnn_balloon.py
2023-02-09 14:09:08,366 - mmdet - INFO - Epoch(val) [10][13]	bbox_mAP: 0.7499, bbox_mAP_50: 0.8953, bbox_mAP_75: 0.8528, bbox_mAP_s: 0.0000, bbox_mAP_m: 0.6597, bbox_mAP_l: 0.8174, bbox_mAP_copypaste: 0.7499 0.8953 0.8528 0.0000 0.6597 0.8174, segm_mAP: 0.7826, segm_mAP_50: 0.8953, segm_mAP_75: 0.8699, segm_mAP_s: 0.0000, segm_mAP_m: 0.6709, segm_mAP_l: 0.8512, segm_mAP_copypaste: 0.7826 0.8953 0.8699 0.0000 0.6709 0.8512
